# appimage-builder recipe see https://appimage-builder.readthedocs.io for details
version: 1
script:
  # Remove any previous build
  # needed to close all ff and do sudo systemctl stop snapd.socket
  # pandas 를 사용함
  # socket notifier can't be enabled or disabled with QTread blahblah
  # python3 -m venv venv100
  # venv100/bin/pip install Orange3 pyqt5 pyqtwebengine
  # copy icon file from share/icons/*
  # cp 에  시간이 걸리니까 나중에 cp 대신 진행상태도 보여주는 커맨드로 변경해보자.
  # python3 -m venv venv12/usr
  # portable python 내용을  merge 하고 venv12/usr/bin/pip venv12/usr/bin/python3 이 제대로 작동하는지 확인
  # venv12/usr/bin/pip install Orange3 pyqt5 pyqtwebengine python3-pyqt5 python3-pyqt5-headless
  # venv12/usr/bin/python -m Orange.canvas 확인
  # 아이콘 복사
  # xhost +
  # docker run -it --name=test2 --device /dev/fuse --env="DISPLAY" --net=host --privileged ubuntu:23.04 
  # docker cp ./orange-canvas test2:/root/
  # 이후 컨테이너 안에서 ./orange-canvas 를 하면서 에러가 나올 때마다 우분투 시스템 패키지를 찾아 설치하고, 현재의 결과
  # 이후 임시로 Orange.canvas 안의 의심되는 기능들을 임시로 비활성화. venv11
  # https://stackoverflow.com/questions/64570272/reading-and-writing-qtcpsockets-through-different-threads-throws-qsocketnotifier
  # 이후의  appimage 는 docker 안에서 테스트먼저 하는 방식으로 진행하자.
  #  그럼에도 불구하고, .py 처럼 소스코드 실행은 되나 appimage 로 실행은 안되는 시나리오도 분명 있음을 유념하자.
  # 다른 이미지들은 거의 항상 되는데, 우분투xenial 만 혼자 없는 게 너무 많다.
  # fuse 는 앱이미지에  포함시킬 수 없다. 그러니까 테스트용으로 fuse 만 포함한 이미지를 새로 만들어두자. 우분투에서의 이름은 libfuse2 이다
  # ubuntu 2304 에서 매뉴얼 테스트 통과하였다. 하지만  appimage-builder 를 통한 테스트는 useradd: UID 1000 is not unique 에러로 통과하지 못하였다. 2304 용 테스트 이미지를 나중에 만들던가 하자. 자세한 에러 메시지는 에러로그에 기록하였음

  - rm -rf AppDir  | true
  - rm -rf appimage-build
  - cp -r res2 AppDir

AppDir:
  path: ./AppDir
  app_info:
    id: urxvt
    name: urxvt
    icon: urxvt
    version: latest
    # Set the python executable as entry point
    exec: launch
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    # exec_args: "-m Orange.canvas"
    exec_args: $@
  apt:
    arch: amd64
    allow_unauthenticated: true
    sources:
      - sourceline: deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
    include: []
    # - libc6
    # - libglib2.0-0
    # - gstreamer1.0-tools
    # - libgstreamer1.0-0
    exclude: []

  runtime:
  #   env:
  #     PERL5LIB: '${APPDIR}/urxvt_conf/:${APPDIR}/urxvt_conf/perl-modules/'
    path_mappings:
      # - /usr/share/perl/5.34:$APPDIR/usr/share/perl/5.34
      # - /usr/lib/x86_64-linux-gnu/perl/5.34:$APPDIR/usr/lib/x86_64-linux-gnu/perl/5.34
      - /lib64:$APPDIR/lib64
      - /lib/x86_64-linux-gnu:$APPDIR/lib64

  test:

    fedora-30:
      image: appimagecrafters/tests-env:fedora-30
      #command: env XDG_RUNTIME_DIR=/run/user/1000 bash -c './AppRun'
      command: "./AppRun"
      #use_host_x: True
      env:
        QT_DEBUG_PLUGINS: 0 
        LD_DEBUG: libs
    debian-stable:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun
      use_host_x: true
    archlinux-latest:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun
      use_host_x: true
    centos-7:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun
      use_host_x: true
    # ubuntu-lunar:
    #   image: ubuntu:23.04
    #   command: ./AppRun
    #   use_host_x: true
    
AppImage:
  arch: x86_64
  update-information: None
  sign-key: None
